local player = game.Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local workspace = game:GetService("Workspace")
local UIS = game:GetService("UserInputService")

-- UI Setup
local screenGui = Instance.new("ScreenGui", game.CoreGui)
screenGui.Name = "AutoFarmUI"
local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0, 250, 0, 130)
frame.Position = UDim2.new(0.5, -125, 0.2, 0)
frame.BackgroundColor3 = Color3.fromRGB(10, 10, 20)
frame.BorderSizePixel = 2
frame.Active = true
frame.Draggable = true

local uiGlow = Instance.new("UIStroke", frame)
uiGlow.Color = Color3.fromRGB(0, 255, 0)
uiGlow.Thickness = 2

local titleLabel = Instance.new("TextLabel", frame)
titleLabel.Size = UDim2.new(1, 0, 0.25, 0)
titleLabel.Position = UDim2.new(0, 0, 0, 0)
titleLabel.Text = "Enable Autofarm"
titleLabel.TextSize = 18
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.BackgroundTransparency = 1
titleLabel.TextAlign = Enum.TextXAlignment.Center
titleLabel.TextStrokeTransparency = 0.5

local startButton = Instance.new("TextButton", frame)
startButton.Size = UDim2.new(1, 0, 0.4, 0)
startButton.Position = UDim2.new(0, 0, 0.25, 0)
startButton.Text = "Start"
startButton.TextSize = 20
startButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
startButton.TextColor3 = Color3.fromRGB(0, 0, 0)
startButton.TextStrokeTransparency = 0.5
startButton.MouseButton1Click:Connect(function()
    if not isFarming then
        isFarming = true
        startButton.Text = "Stop"
        -- Start the auto-farm
        autoFarm()
    else
        isFarming = false
        startButton.Text = "Start"
        -- Stop the auto-farm
    end
end)

local statusLabel = Instance.new("TextLabel", frame)
statusLabel.Size = UDim2.new(1, 0, 0.25, 0)
statusLabel.Position = UDim2.new(0, 0, 0.65, 0)
statusLabel.Text = "Status: Inactive"
statusLabel.TextSize = 16
statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
statusLabel.BackgroundTransparency = 1
statusLabel.TextAlign = Enum.TextXAlignment.Center
statusLabel.TextStrokeTransparency = 0.5

local isFarming = false
local originalPosition = player.Character.HumanoidRootPart.CFrame

local function teleportToBoss()
    -- Teleport logic to the boss
    local boss = workspace:FindFirstChild("BadTimeTrioBoss")
    if boss then
        local head = boss:FindFirstChild("Head")
        if head then
            player.Character.HumanoidRootPart.CFrame = head.CFrame
            -- Destroy head to kill boss
            head:Destroy()
            statusLabel.Text = "Status: Boss Killed"
        else
            statusLabel.Text = "Status: No Head Found"
        end
    else
        statusLabel.Text = "Status: Boss Not Found"
    end
end

local function autoFarm()
    while isFarming do
        statusLabel.Text = "Status: Farming"
        teleportToBoss()
        task.wait(10)  -- Adjust wait time as needed
        -- Teleport back to original position
        player.Character.HumanoidRootPart.CFrame = originalPosition
        task.wait(5)  -- Adjust wait time as needed for the next farm
    end
    statusLabel.Text = "Status: Inactive"
end
