local player = game.Players.LocalPlayer
local dataStoreService = game:GetService("DataStoreService")
local farmDataStore = dataStoreService:GetDataStore("BossFarmState") -- Global save store

-- Load saved state
local success, savedState = pcall(function()
    return farmDataStore:GetAsync(player.UserId)
end)

local farming = success and savedState or false -- Default to false if no saved data

-- UI Setup
local screenGui = Instance.new("ScreenGui", game.CoreGui)
local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0, 250, 0, 100)
frame.Position = UDim2.new(0.5, -125, 0.2, 0)
frame.BackgroundColor3 = Color3.fromRGB(20, 10, 30) -- Dark Purple Background
frame.BorderSizePixel = 2
frame.Active = true
frame.Draggable = true

local uiGlow = Instance.new("UIStroke", frame)
uiGlow.Color = Color3.fromRGB(100, 50, 255) -- Neon Blue Glow
uiGlow.Thickness = 3

local button = Instance.new("TextButton", frame)
button.Size = UDim2.new(1, 0, 0.5, 0)
button.Text = "ENABLE AUTO FARM"
button.BackgroundColor3 = Color3.fromRGB(50, 50, 150) -- Deep Blue Button
button.TextColor3 = Color3.fromRGB(180, 100, 255) -- Light Purple Text
button.Font = Enum.Font.SourceSansBold
button.TextSize = 18
button.Parent = frame

local statusLabel = Instance.new("TextLabel", frame)
statusLabel.Size = UDim2.new(1, 0, 0.5, 0)
statusLabel.Position = UDim2.new(0, 0, 0.5, 0)
statusLabel.Text = "Status: Idle"
statusLabel.BackgroundTransparency = 1
statusLabel.TextColor3 = Color3.fromRGB(200, 150, 255) -- Light Purple Text
statusLabel.Font = Enum.Font.SourceSansBold
statusLabel.TextSize = 16
statusLabel.Parent = frame

-- Function to Find the Head
local function findBossHead(boss)
    if not boss then return nil end

    for _, descendant in pairs(boss:GetDescendants()) do
        if descendant:IsA("BasePart") and string.lower(descendant.Name):find("head") then
            return descendant
        end
    end
    return nil
end

-- Function to Teleport, Keep Trying Until Boss Dies
local function teleportAndKillLoop()
    while farming do
        local boss = workspace:FindFirstChild("BadTimeTrioBoss")

        if boss then
            local head = findBossHead(boss)

            while farming and head and boss.Parent do -- Keep checking
                player.Character:SetPrimaryPartCFrame(head.CFrame) -- Teleport to boss head
                task.wait(1)
                head:Destroy() -- Try to kill boss
                task.wait(0.5)
                boss = workspace:FindFirstChild("BadTimeTrioBoss") -- Recheck boss
                head = boss and findBossHead(boss) -- Check if head still exists
            end
        end

        task.wait(1) -- Wait before next check
    end
end

-- Function to Save Farming State
local function saveFarmState(state)
    pcall(function()
        farmDataStore:SetAsync(player.UserId, state)
    end)
end

-- Button Toggle Auto Farm
button.MouseButton1Click:Connect(function()
    farming = not farming
    saveFarmState(farming) -- Save new state

    if farming then
        button.Text = "DISABLE AUTO FARM"
        button.BackgroundColor3 = Color3.fromRGB(120, 50, 255) -- Purple Button
        statusLabel.Text = "Status: Farming"
        task.spawn(teleportAndKillLoop)
    else
        button.Text = "ENABLE AUTO FARM"
        button.BackgroundColor3 = Color3.fromRGB(50, 50, 150) -- Deep Blue Button
        statusLabel.Text = "Status: Idle"
    end
end)

-- Auto-Enable Farming if it was enabled before leaving
if farming then
    task.spawn(teleportAndKillLoop)
end
